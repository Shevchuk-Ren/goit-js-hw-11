{"version":3,"sources":["js/03-promisify.js"],"names":["delay","ms","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","username","callback","updatedUsers","map","user","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","onSuccess","onError","setTimeout","canProcess","id","logSuccess","logError","warn"],"mappings":"AAAA;AACA,MAAMA,KAAK,GAAGC,EAAE,IAAI,CAChB;AACH,CAFD;;AAIA,MAAMC,MAAM,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAa,mBAAkBF,IAAK,IAApC,CAAvB,EAEA;;;AACAH,KAAK,CAAC,IAAD,CAAL,CAAYM,IAAZ,CAAiBJ,MAAjB,GAA0B;;AAC1BF,KAAK,CAAC,IAAD,CAAL,CAAYM,IAAZ,CAAiBJ,MAAjB,GAA0B;;AAC1BF,KAAK,CAAC,IAAD,CAAL,CAAYM,IAAZ,CAAiBJ,MAAjB,GAA0B;AAE1B;;AACA,MAAMK,KAAK,GAAG,CACV;AAAEC,EAAAA,IAAI,EAAE,OAAR;AAAiBC,EAAAA,MAAM,EAAE;AAAzB,CADU,EAEV;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,MAAM,EAAE;AAAxB,CAFU,EAGV;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,MAAM,EAAE;AAAxB,CAHU,CAAd;;AAMA,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,QAArB,KAAkC;AACtD,QAAMC,YAAY,GAAGH,QAAQ,CAACI,GAAT,CAAaC,IAAI,IAClCA,IAAI,CAACR,IAAL,KAAcI,QAAd,GAAyB,EAAE,GAAGI,IAAL;AAAWP,IAAAA,MAAM,EAAE,CAACO,IAAI,CAACP;AAAzB,GAAzB,GAA6DO,IAD5C,CAArB;AAIAH,EAAAA,QAAQ,CAACC,YAAD,CAAR;AACH,CAND,EAQA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AACA,MAAMG,yBAAyB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5C,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACH,CAFD;;AAIA,MAAMK,eAAe,GAAG,CAACC,WAAD,EAAcC,SAAd,EAAyBC,OAAzB,KAAqC;AACzD,QAAM1B,KAAK,GAAGiB,yBAAyB,CAAC,GAAD,EAAM,GAAN,CAAvC;AAEAU,EAAAA,UAAU,CAAC,MAAM;AACb,UAAMC,UAAU,GAAGR,IAAI,CAACE,MAAL,KAAgB,GAAnC;;AAEA,QAAIM,UAAJ,EAAgB;AACZH,MAAAA,SAAS,CAAC;AAAEI,QAAAA,EAAE,EAAEL,WAAW,CAACK,EAAlB;AAAsB1B,QAAAA,IAAI,EAAEH;AAA5B,OAAD,CAAT;AACH,KAFD,MAEO;AACH0B,MAAAA,OAAO,CAACF,WAAW,CAACK,EAAb,CAAP;AACH;AACJ,GARS,EAQP7B,KARO,CAAV;AASH,CAZD;;AAcA,MAAM8B,UAAU,GAAG,CAAC;AAAED,EAAAA,EAAF;AAAM1B,EAAAA;AAAN,CAAD,KAAkB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAa,eAAcwB,EAAG,iBAAgB1B,IAAK,IAAnD;AACH,CAFD;;AAIA,MAAM4B,QAAQ,GAAGF,EAAE,IAAI;AACnBzB,EAAAA,OAAO,CAAC4B,IAAR,CAAc,gCAA+BH,EAAG,2BAAhD;AACH,CAFD,EAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","file":"03-promisify.d656aad3.js","sourceRoot":"..\\src","sourcesContent":["// ======================= Subtask 1 =======================\r\nconst delay = ms => {\r\n    // Change this function\r\n};\r\n\r\nconst logger = time => console.log(`Fulfilled after ${time}ms`);\r\n\r\n// Tests\r\ndelay(2000).then(logger); // Fulfilled after 2000ms\r\ndelay(1000).then(logger); // Fulfilled after 1000ms\r\ndelay(1500).then(logger); // Fulfilled after 1500ms\r\n\r\n// ======================= Subtask 2 =======================\r\nconst users = [\r\n    { name: 'Mango', active: true },\r\n    { name: 'Poly', active: false },\r\n    { name: 'Ajax', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, username, callback) => {\r\n    const updatedUsers = allUsers.map(user =>\r\n        user.name === username ? { ...user, active: !user.active } : user\r\n    );\r\n\r\n    callback(updatedUsers);\r\n};\r\n\r\n// Currently the function works like this\r\n// toggleUserState(users, 'Mango', console.table);\r\n// toggleUserState(users, 'Ajax', console.table);\r\n\r\n// The function should work like this\r\n// toggleUserState(users, 'Mango').then(console.table);\r\n// toggleUserState(users, 'Ajax').then(console.table);\r\n\r\n// ======================= Subtask 3 =======================\r\nconst randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction, onSuccess, onError) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n\r\n    setTimeout(() => {\r\n        const canProcess = Math.random() > 0.3;\r\n\r\n        if (canProcess) {\r\n            onSuccess({ id: transaction.id, time: delay });\r\n        } else {\r\n            onError(transaction.id);\r\n        }\r\n    }, delay);\r\n};\r\n\r\nconst logSuccess = ({ id, time }) => {\r\n    console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n// Currently the function works like this\r\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\r\n\r\n// The function should work like this\r\n// makeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\n// makeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\n// makeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\n// makeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);"]}